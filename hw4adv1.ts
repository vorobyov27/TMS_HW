// #### Task 18 Advanced üíª
// –í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–æ–ª–∂–Ω–æ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫): 
// "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é:
// 1. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
// 2. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
// 3. –ò–≥—Ä–∞ —É–≥–∞–¥–∞–π"
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3. 
// –ï—Å–ª–∏ –≤–≤–æ–¥–∏—Ç—Å—è —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, —Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑" –∏ —Ç–æ –∂–µ —Å–∞–º–æ–µ –º–µ–Ω—é (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å console.clear() –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Å–æ–ª–∏).
// ###### –í —Å–ª—É—á–∞–µ –≤—ã–±–æ—Ä–∞ 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ 2 —á–∏—Å–ª–∞ –∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ç–∞–∫–∂–µ –≤ –≤–∏–¥–µ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é):
// –°–ª–æ–∂–µ–Ω–∏–µ
// –í—ã—á–∏—Ç–∞–Ω–∏–µ
// –£–º–Ω–æ–∂–µ–Ω–∏–µ
// –î–µ–ª–µ–Ω–∏–µ
// –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
// –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è 1 —á–∏—Å–ª–∞ –Ω–∞ 2
// ###### –í —Å–ª—É—á–∞–µ –≤—ã–±–æ—Ä–∞ 2 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –æ—Ç—á–µ—Å—Ç–≤–æ, –≤–æ–∑—Ä–∞—Å—Ç –∏ 3 –ª—é–±—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∫–æ–Ω—å, –ø—ë—Å, –∂–∏—Ä–∞—Ñ". 
// –ü–æ—Å–ª–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤—ã–≤–µ—Å—Ç–∏:
// –ò–º—è –≤–∞—à–µ–≥–æ –æ—Ç—Ü–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å <3-5 –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤ –æ—Ç—á–µ—Å—Ç–≤–∞>
// –í—ã —Ä–æ–¥–∏–ª–∏—Å—å –≤ *** –≥–æ–¥—É
// –í–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –Ω–µ —Ç–æ—á–Ω–æ, —á—Ç–æ –≤ –ø—Ä–æ—à–ª–æ–π –∂–∏–∑–Ω–∏ –≤—ã –±—ã–ª–∏ <–æ–¥–Ω–æ –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö>
// ###### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É (–æ—Ç 5 –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤) –∏–ª–∏ —á–∏—Å–ª–æ (–æ—Ç 5 –¥–æ 15). –î–∞–ª–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —É–≥–∞–¥–∞—Ç—å:
// –ß–∏—Å–ª–æ (n): –µ—Å–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 15, —Ç–æ –±–µ—Ä—ë—Ç—Å—è 15, —Ä–∞–Ω–¥–æ–º–Ω–æ –±–µ—Ä–µ—Ç—Å—è —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ n. 
// –°—Ç—Ä–æ–∫–∞ (n - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏): –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –±–æ–ª—å—à–µ 15 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 15, —Ä–∞–Ω–¥–æ–º–Ω–æ –±–µ—Ä–µ—Ç—Å—è —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏.
// –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è n / 3 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É) –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –ª–∏–±–æ —Å–∏–º–≤–æ–ª.
// –ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏"
// –ü—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º: "–ê –≤–æ—Ç –∏ –Ω–µ—Ç. –ï—â–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?"
// –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π: "–í —ç—Ç–æ—Ç —Ä–∞–∑ –∫–∞–∫-—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å, –∑–∞—Ö–æ–¥–∏—Ç–µ –µ—â–µ"

const readlineHw4 = require("readline-sync");

let isCorrectMenuItem: boolean = false;

while (!isCorrectMenuItem) {
    let userMenuItem: string = readlineHw4.question("Enter menu number: \n1. Calculator \n2. Prediction \n3. Guess game \n: ");
    switch (userMenuItem) {
        case "1":
            let userCalcItem: string = readlineHw4.question("Select needed action: \n1. Plus \n2. Minus \n3. Multiply \n4. Divide \n5. Power \n6. Divide rest from 1 number to 2 \n: ");
            let inputFirstNumber: number = +readlineHw4.question("Enter first number: ");
            let inputSecondNumber: number = +readlineHw4.question("Enter second number: ");
            console.log(`You select operation ‚Ññ${userCalcItem} and numbers ${inputFirstNumber} and ${inputSecondNumber}`);
            isCorrectMenuItem = true;
            break;
        case "2":
            let patrName: string = readlineHw4.question("Enter your patronymic name: ");
            let userAge: number = +readlineHw4.question("Enter your age: ");
            let userAnimals: string = readlineHw4.question("Enter 3 favourite anumals(horse, dog, giraffe) for example: ");
            const fatherNameLetters: string = patrName.slice(0,3);
            let now = new Date();
            const birthYear: number =  now.getFullYear() - userAge;
            const animalArray = userAnimals.split(', ');
            const randomIndex: number = Math.floor(Math.random()*(animalArray.length - 1));

            console.log(`Your father name starts with ${fatherNameLetters}`);
            console.log(`You was born in ${birthYear} year`);
            console.log(`Probably, but not exactly, you was a ${animalArray[randomIndex]} in your previous life!`);

            isCorrectMenuItem = true;
            break;
        case "3":
            // —Å—á–∏—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –∏–≥—Ä–æ–∫–∞
            let userInput = readlineHw4.question("Enter any string(5-15 symbols) or any number(form 5 to 15): ");
            let numericUserInput = +userInput;
            let tryCount: number;
            let correctGuess: boolean = false;
            let randomArrInd: number;
            let messageToAsk: string;
            let maxArrInd: number = 0;
            let targetSymbol: string;
            
            // —Ä–∞–∑–≤–∏–ª–∫–∞: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –∏–≥—Ä–æ–∫–∞ —Å—Ç—Ä–æ–∫–æ–π
            if (isNaN(numericUserInput)) {
                // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞: –≤—ã—á–∏—Å–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∏–º–≤–æ–ª–∞, –≤—ã—á–∏—Å–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏.
                console.log("User input is a string!");
                maxArrInd = userInput.length > 15 ? 15 : userInput.length;
                randomArrInd = Math.floor(Math.random() * maxArrInd);
                messageToAsk = "Guess the symbol";

                targetSymbol = userInput[randomArrInd];
            } else {
                // –ï—Å–ª–∏ —á–∏—Å–ª–æ: –≤—ã—á–∏—Å–ª—è–µ–º, –≤–≤—ë–ª –ª–∏ –∏–≥—Ä–æ–∫ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 15, –ø–æ–ª—É—á–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–≤–æ–¥–∞
                console.log("User input is a number!");
                messageToAsk = "Guess the number";
                maxArrInd = numericUserInput > 15 ? 15 : numericUserInput;
                targetSymbol = (Math.floor(Math.random() * +maxArrInd) + 1).toString();
            }
            tryCount = Math.floor(maxArrInd/3);

            // –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–≥—Ä–æ–∫—É —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ
            for (let j:number = 1; j <=tryCount; j++) {
                let guessChar: string = readlineHw4.question(`${messageToAsk}. Attempt #${j} from ${tryCount}: `);
                if (guessChar == targetSymbol){
                    console.log("Nice! You've won!");
                    correctGuess = true;
                    break;
                } else if (!correctGuess && j==tryCount) {
                    console.clear();
                    console.log("You've lost! Try again later!");
                    break;
                }
                else console.log("Incorrect. Try again!: ");
            }
            isCorrectMenuItem = true;
            break;

        default: {
            console.clear();
            console.log("Incorrect menu item. Try again");
        }
    }
}
